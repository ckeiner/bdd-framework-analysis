package com.ckeiner.bdd.spectrum.reuse.fixtures.gherkin;

import static com.greghaskins.spectrum.dsl.gherkin.Gherkin.example;
import static com.greghaskins.spectrum.dsl.gherkin.Gherkin.feature;
import static com.greghaskins.spectrum.dsl.gherkin.Gherkin.given;
import static com.greghaskins.spectrum.dsl.gherkin.Gherkin.scenarioOutline;
import static com.greghaskins.spectrum.dsl.gherkin.Gherkin.when;
import static com.greghaskins.spectrum.dsl.gherkin.Gherkin.withExamples;

import java.util.concurrent.atomic.AtomicInteger;

import org.junit.runner.RunWith;

import com.greghaskins.spectrum.Spectrum;

/**
 * Uses a scenarioOutline in a scenarioOutline. The report generated by
 * Spectrum, however, doesn't match the actual execution.
 * 
 * @author ckeiner
 *
 */
@RunWith(Spectrum.class)
public class NestedScenarioOutline
{
    {
        feature("A feature", () ->
            {
                scenarioOutline("The background with an example", (browser) ->
                    {
                        scenarioOutline("Eating less cucumbers than I have ", (have, eat, remaining) ->
                            {
                                final AtomicInteger cukes = new AtomicInteger();
                                given("I have " + have + " cucumbers", () ->
                                    {
                                        cukes.set(have);
                                    });
                                when("I eat " + eat + " cucumbers", () ->
                                    {
                                        cukes.addAndGet(-eat);
                                    });
                            }, withExamples(example(12, 5, 7), example(20, 5, 15)));

                    }, withExamples(example("Chrome"), example("Firefox")));
            });
    }
}
